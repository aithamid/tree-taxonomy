generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp", schema: "public")]
}

model Account {
  id                 String    @id @default(dbgenerated("uuid_generate_v4()")) @unique
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?   @db.Text
  access_token       String?   @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?   @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @unique
  sessionToken String    @unique
  userId       String
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(dbgenerated("uuid_generate_v4()")) @unique
  name          String?
  email         String?     @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  accounts      Account[]
  sessions      Session[]
  files         Files[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// FileType is a table that provides type of file and its generic jsonfile
model FileType {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @unique
  name      String
  jsonfile  Json
  files     Files[]
}

// Files is a table that provides file information

model Files {
  id        String    @id @default(dbgenerated("uuid_generate_v4()")) @unique
  name      String
  userId    String
  filetypeId String
  jsonfile  Json
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  author    User @relation(fields: [userId], references: [id])
  filetype  FileType @relation(fields: [filetypeId], references: [id])
}

